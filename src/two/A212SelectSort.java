package two;

/**
 * 选择排序:
 * 首先,找到数组最小的那个元素, 其次,将它和数组的第一个元素交换位置(如果第一个元素就是最小元素那么它和自己交换)
 * 再次,在剩下的元素中找到最小的元素, 将它与数据的第二个元素交换位置
 */
public class A212SelectSort {
    /**
     * 对于长度为N的数组, 选择排序需要大约N^2/2次比较和N次交换
     */

    /**
     * 特点: 运行时间和输入无关. 为了找出最小元素而扫描一遍数组并不能为下一遍扫描提供信息
     *       一个已经有序的数组或是主键全部相等的数组和一个元素随机排列的数组所用时间一样长
     * 数据移动是最少的: 每次交换都会改变两个数组元素的值. 因此选择排序用了N次交换--交换次数和数组大小是线性关系.
     * 研究的其他算法都不具备这个特征
     */
}
